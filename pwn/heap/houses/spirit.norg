* House of Spirit

  /Can be used for fastbin or tcache/

  This attack can be used when you have limited control over some region of memory, and can malloc a pointer to it. The
  result is allocating a chunk to that region, which allows you to gain better control over the region.

** Overview

   Assume we are able to do these 2 things:

   ~ Write an integer slightly before the address we wish to overwrite
   ~ Get malloc() to return a pointer at the address we wish to overwrite

   When malloc() returns a chunk from fastbin, it checks if the size is a valid fastbin size. If it isn't, the program
   will exit with `malloc(): memory corruption (fast)`. This is why we need no. 1, so that we can clear this check.

   In addition, the chunk's size must also correspond to the fastbin's size. The fastbin's size is dependent on the
   chunk you used to get the bad pointer from.

   On 0x86, the integer size must be at least 4 bytes and at most chunk_size from the desired write location.
   On 0x64, the integer size must be at least 8 bytes and at most chunk_size from the desired write location.

   @code
   0x00000041 <-- I can control this
   0x00000000
   ...
   0xdeadbeef <-- I want to write here
   @end
